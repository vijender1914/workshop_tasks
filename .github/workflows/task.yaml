name: "Task- Terraform IAC"
 
on:
 pull_request:
    branches:
      - main
 
jobs:
  test_1:
    name: tflint
    runs-on: self-hosted
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: tflint-test
          run: |
            curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
            tflint --init
            tflint -f compact | tee report-tflint.txt 
          continue-on-error: true
  test_2:
    name: CheckOV
    runs-on: self-hosted
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: CheckOV-test  
          run: |
            sudo apt-get install -y python3-pip
            pip install checkov
            export PATH=$PATH:/home/ubuntu/.local/bin
            checkov --directory ./ --skip-check CKV_AWS_130,CKV_AWS_230,CKV_AWS_229,CKV_AWS_232,CKV_AWS_231,CKV_AWS_12,CKV_AWS_11,CKV_AWS_1,CKV_AWS_18,CKV_AWS_144,CKV2_AWS_11,CKV2_AWS_1,CKV2_AWS_12,CKV2_AWS_6,CKV_AWS_19,CKV_AWS_145,CKV_AWS_21 | tee report-checkov.txt 
          continue-on-error: true
  test_3:
    name: tfsec
    runs-on: self-hosted
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: tfsec-test
          run: |
            git config --global url."https://${{ secrets.GH_TOKEN }}@github.kyndryl.net".insteadOf "https://github.kyndryl.net"
            sudo curl -L -o /usr/local/bin/tfsec https://github.com/liamg/tfsec/releases/latest/download/tfsec-linux-amd64
            sudo chmod +x /usr/local/bin/tfsec
            tfsec . | tee report-tfsec.txt  
          continue-on-error: true  

    
  env:
  #  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     AWS_REGION: ap-south-1
  tf_deploy:
    name: Terraform_deploy
    runs-on: self-hosted
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: configure aws credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
          role-to-assume: arn:aws:iam::061051245586:role/GitHubAction-AssumeRoleWithAction #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
 
        - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.1
                   
        - name: Terraform Format
        id: fmt
        run: terraform fmt
 
        - name: Terraform Init
        id: init
        run: terraform init
 
        - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
 
        - name: Terraform Apply
        run: terraform apply -auto-approve